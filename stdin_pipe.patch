diff --git a/ex.c b/ex.c
index 756f45d..21ce399 100644
--- a/ex.c
+++ b/ex.c
@@ -403,7 +403,9 @@ int ex_edit(const char *path, int len)
 static int ec_edit(char *loc, char *cmd, char *arg)
 {
 	char msg[128];
-	int fd, len, rd = 0, cd = 0;
+	int fd = 0, len, rd = 0, cd = 0;
+	if (!cmd)
+		goto ret;
 	if (arg[0] == '.' && arg[1] == '/')
 		cd = 2;
 	len = strlen(arg+cd);
@@ -423,6 +425,9 @@ static int ec_edit(char *loc, char *cmd, char *arg)
 		ex_bufpostfix(ex_buf, arg[0]);
 		syn_setft(ex_ft);
 	}
+	if (!loc)
+		return fd < 0 || rd;
+	ret:
 	snprintf(msg, sizeof(msg), "\"%s\" %dL [%c]",
 			*ex_path ? ex_path : "unnamed", lbuf_len(xb),
 			fd < 0 || rd ? 'f' : 'r');
@@ -1224,15 +1229,26 @@ void ex(void)
 
 void ex_init(char **files, int n)
 {
-	xbufsalloc = MAX(n, xbufsalloc);
+	xbufsalloc = MAX(n + !!stdin_fd, xbufsalloc);
 	ec_setbufsmax(NULL, NULL, "");
 	char *s = files[0] ? files[0] : "";
+	int i = n;
 	do {
-		ec_edit("", "e", s);
+		ec_edit(!n && stdin_fd ? NULL : "", "e", s);
 		s = *(++files);
 	} while (--n > 0);
+	if (stdin_fd) {
+		if (i)
+			ec_edit(NULL, "", "");
+		i = lbuf_rd(xb, STDIN_FILENO, 0, lbuf_len(xb));
+		term_done();
+		term_init();
+		lbuf_saved(xb, 1);
+		ec_edit("", NULL, ""); /* shebang patch compat */
+	}
 	xmpt = 0;
 	xvis &= ~8;
+	signal(SIGINT, SIG_DFL); /* got past init? ok remove ^c */
 	if ((s = getenv("EXINIT")))
 		ex_command(s)
 }
diff --git a/term.c b/term.c
index 885c082..fd2565f 100644
--- a/term.c
+++ b/term.c
@@ -2,6 +2,8 @@ sbuf *term_sbuf;
 int term_record;
 int xrows, xcols;
 static struct termios termios;
+int stdin_fd;
+static int isig;
 
 void term_init(void)
 {
@@ -10,20 +12,24 @@ void term_init(void)
 	struct winsize win;
 	struct termios newtermios;
 	sbufn_make(term_sbuf, 2048)
-	tcgetattr(0, &termios);
+	tcgetattr(stdin_fd, &termios);
 	newtermios = termios;
-	newtermios.c_lflag &= ~(ICANON | ISIG | ECHO);
-	tcsetattr(0, TCSAFLUSH, &newtermios);
+	if (!isig && stdin_fd)
+		newtermios.c_lflag &= ~(ICANON);
+	else
+		newtermios.c_lflag &= ~(ICANON | ISIG | ECHO);
+	tcsetattr(stdin_fd, TCSAFLUSH, &newtermios);
 	if (getenv("LINES"))
 		xrows = atoi(getenv("LINES"));
 	if (getenv("COLUMNS"))
 		xcols = atoi(getenv("COLUMNS"));
-	if (!ioctl(0, TIOCGWINSZ, &win)) {
+	if (!ioctl(stdin_fd, TIOCGWINSZ, &win)) {
 		xcols = win.ws_col;
 		xrows = win.ws_row;
 	}
 	xcols = xcols ? xcols : 80;
 	xrows = xrows ? xrows : 25;
+	isig = 1;
 }
 
 void term_done(void)
@@ -32,7 +38,7 @@ void term_done(void)
 		return;
 	term_commit();
 	sbuf_free(term_sbuf)
-	tcsetattr(0, 0, &termios);
+	tcsetattr(stdin_fd, 0, &termios);
 }
 
 void term_clean(void)
@@ -142,12 +148,12 @@ int term_read(void)
 			if (texec == '&')
 				goto ret;
 		}
-		ufds[0].fd = STDIN_FILENO;
+		ufds[0].fd = stdin_fd;
 		ufds[0].events = POLLIN;
 		/* read a single input character */
 		if (poll(ufds, 1, -1) <= 0 ||
-				(n = read(STDIN_FILENO, ibuf, 1)) <= 0) {
-			xquit = !isatty(STDIN_FILENO);
+				(n = read(stdin_fd, ibuf, 1)) <= 0) {
+			xquit = !isatty(stdin_fd);
 			ret:
 			*ibuf = 0;
 			n = 1;
@@ -323,7 +329,7 @@ char *cmd_pipe(char *cmd, char *ibuf, int oproc)
 		close(ifd);
 	waitpid(pid, NULL, 0);
 	signal(SIGTTOU, SIG_IGN);
-	tcsetpgrp(STDIN_FILENO, getpgrp());
+	tcsetpgrp(stdin_fd, getpgrp());
 	signal(SIGTTOU, SIG_DFL);
 	if (!ibuf) {
 		term_init();
diff --git a/vi.c b/vi.c
index d038913..93e425f 100644
--- a/vi.c
+++ b/vi.c
@@ -1898,7 +1898,8 @@ static int setup_signals(void) {
 	struct sigaction sa;
 	memset(&sa, 0, sizeof(sa));
 	sa.sa_handler = sighandler;
-	if (sigaction(SIGWINCH, &sa, NULL))
+	if (sigaction(SIGWINCH, &sa, NULL)
+			|| sigaction(SIGINT, &sa, NULL))
 		return 0;
 	return 1;
 }
@@ -1916,7 +1917,8 @@ int main(int argc, char *argv[])
 		if (argv[i][1] == '-' && !argv[i][2]) {
 			i++;
 			break;
-		}
+		} else if (!argv[i][1])
+			stdin_fd = MAX(0, open(ctermid(NULL), O_RDONLY));
 		for (j = 1; argv[i][j]; j++) {
 			if (argv[i][j] == 's')
 				xvis |= 2|4;
diff --git a/vi.h b/vi.h
index ff5c929..14259e9 100644
--- a/vi.h
+++ b/vi.h
@@ -444,6 +444,7 @@ void vi_regput(int c, const char *s, int ln);
 /* file system */
 void dir_calc(char *path);
 /* global variables */
+extern int stdin_fd;
 extern int xrow;
 extern int xoff;
 extern int xtop;
