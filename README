nextvi(1)		    General Commands Manual		     nextvi(1)

NAME
     nextvi – A small vi/ex editor for editing bidirectional UTF-8 text

SYNOPSIS
     vi [-emsv] [file ...]

DESCRIPTION
     nextvi is a vi(1)-like text editor based on Ali Gholami Rudi's neatvi(1).
     It supports UTF-8 and bidirectional text.

OPTIONS
     -e	     Enter Ex mode on startup

     -m	     Disable initial file read message

     -s	     When combined with -e enters limited Ex mode

     -v	     Enter visual mode on startup. (Default)

VI NORMAL
     arg-+ arg-\n arg-j
	     Move the cursor arg lines down

     arg-- arg-k
	     Move the cursor arg lines up

     ^	     Move the cursor to the start of the line after indentation

     '	     Goto a line mark

     gg	     Goto the first line in the buffer

     G	     Goto the last line in the buffer

     H	     Goto the highest line of the screen

     L	     Goto the lowest line of the screen

     M	     Goto the middle line of the screen

     arg-,   Repeat last f or F or t or F command backward arg times

     arg-;   Repeat last f or F or t or F command forward arg times

     arg-h   Move the cursor arg cols left

     arg-l   Move the cursor arg cols right

     f	     Move the cursor to the character found forward

     F	     Move the cursor to the character found backward

     t	     Move the cursor until the character found forward

     T	     Move the cursor until the character found backward

     arg-B   Move the cursor to the end of the word skipping punctuation
	     backward arg times

     arg-E   Move the cursor to the end of the word skipping punctuation
	     forward arg times

     arg-b   Move the cursor to the end of the word backward arg times

     arg-e   Move the cursor to the end of the word forward arg times

     arg-W   Move the cursor to the start of the word skipping punctuation
	     forward arg times

     arg-w   Move the cursor to the start of the word forward arg times

     {	     Move the cursor to the next { region

     }	     Move the cursor to the next } region

     [	     Move the cursor to the next \n region up

     ]	     Move the cursor to the next \n region down

     C-]

     C-p

     C-t

     0 |     Move the cursor to the start of the line.

     $	     Move the cursor to the end of the line.

     arg-|   Move the cursor to arg col

     arg-/   Search using regex down skipping arg matches

     arg-?   Search using regex up skipping arg matches

     arg-n   Repeat search down skipping arg matches

     arg-N   Repeat search up skipping arg matches

     C-a     Auto search word under the cursor, not centering and wrapping
	     up/down direction

     arg-C-a
	     Auto search setting arg words from the cursor

     arg-Space
	     Move cursor arg character forward

     arg-C-h arg-Backspace
	     Move cursor arg character backward

     `	     Goto a line mark with horizonal position

     %	     Move the cursor to [](){} pair

     arg-%   Move the cursor to the arg % representation line of the file


EX COMMANDS
     f

     b

     bp

     bs

     p

     a

     ea

     ea!

     i

     d

     c

     e

     e!

     g

     g!

     =

     k

     tp

     pu

     q

     q!

     r

     v

     w

     w!

     wq

     wq!

     u

     rd

     se

     s

     x

     x!

     ya

     !

     ft

     cm

     cm!

     fd

     fp

     cd

     inc

     bx

     ac

EX OPTIONS
     ai	     If set, indent new lines.

     ic	     If set, ignore case in regular expressions.

     ish

     grp

     hl	     If set, highlight text based on rules defined in conf.c.

     hll     If set, highlight current line.

     hlp     If set, highlight pairs of brackets.

     hlr     If set, highlight text in reverse direction.

     hlw     If set, highlight current word.

     led

     mpt

     order   If set, reorder characters based on rules defined in conf.c.

     pac     If set, print autocomplete suggestions on the fly.

     shape   If set, perform Arabic script letter shaping.

     tbs     Number of spaces used to represent a tab.

     td	     Current text direction context.  This option accepts four
	     meaningful values:
	     +2	     Exclusively left-to-right.
	     +1	     Follow dircontexts[] (in conf.c), defaulting to left-to-
		     right.
	     -1	     Follow dircontexts[], defaulting to right-to-left.
	     -2	     Exclusively right-to-left.

SPECIAL MARKS
SPECIAL YANK BUFFERS
SEE ALSO
AUTHORS
     nextvi was written by Kyryl Melekhin <k.melekhin@gmail.com>.  It is based
     on neatvi(1), which was written by Ali Gholami Rudi <ali@rudi.ir>.	 This
     manual page was written by népéta <nepeta@canaglie.net>

Linux 6.11.4-arch1-1	      September 12, 2024	  Linux 6.11.4-arch1-1
