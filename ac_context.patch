diff --git a/led.c b/led.c
index 9ed4d0d..098ed51 100644
--- a/led.c
+++ b/led.c
@@ -10,26 +10,31 @@ int dstrlen(const char *s, char delim)
 	return i-s;
 }
 
-static int search(const char *pattern, int l)
+static int search(sbuf *sb, int l, int pre)
 {
-	if (!*pattern)
+	if (!sb->s[l])
 		return 0;
 	sbuf_cut(suggestsb, 0)
 	sbuf *sylsb;
 	sbuf_make(sylsb, 1024)
-	char *part = strstr(acsb->s, pattern);
+	again:;
+	char *part = strstr(acsb->s, sb->s+l);
 	while (part) {
 		char *part1 = part;
 		while (*part != '\n')
 			part--;
 		int len = dstrlen(++part, '\n');
-		if (len++ != l) {
+		if (len++ != sb->s_n - l) {
 			if (part == part1)
 				sbuf_mem(suggestsb, part, len)
-			else
+			else if (l >= pre)
 				sbuf_mem(sylsb, part, len)
 		}
-		part = strstr(part+len, pattern);
+		part = strstr(part+len, sb->s+l);
+	}
+	if (l < pre && sb->s[pre]) {
+		l = pre;
+		goto again;
 	}
 	sbuf_mem(suggestsb, sylsb->s, sylsb->s_n)
 	sbuf_free(sylsb)
@@ -384,8 +389,10 @@ static void led_line(sbuf *sb, int ps, int pre, char *post, int ai_max,
 		int *key, int *kmap, int orow, int lsh)
 {
 	int len, p_reg = 0;
-	int c, i = 0, last_sug = 0, sug_pt = -1;
+	int c, i = 0, lsug = 0, sug_pt = -1;
 	char *cs, *sug = NULL, *_sug = NULL;
+	if (ai_max >= 0 && xpac)
+		goto pac;
 	while (1) {
 		led_printparts(sb, ps, post, ai_max);
 		len = sb->s_n;
@@ -491,7 +498,7 @@ static void led_line(sbuf *sb, int ps, int pre, char *post, int ai_max,
 		case TK_CTL('n'):
 			if (!suggestsb)
 				continue;
-			last_sug = sug_pt >= 0 ? sug_pt : led_lastword(sb->s + pre) + pre;
+			lsug = sug_pt >= 0 ? sug_pt : led_lastword(sb->s);
 			if (_sug) {
 				if (suggestsb->s_n == sug - suggestsb->s)
 					continue;
@@ -502,13 +509,14 @@ static void led_line(sbuf *sb, int ps, int pre, char *post, int ai_max,
 				}
 				suggest:
 				*_sug = '\0';
-				sbuf_cut(sb, last_sug)
-				sbufn_str(sb, sug)
+				for (c = 0; sug[c] && sb->s[c+lsug] == sug[c]; c++){}
+				sbuf_cut(sb, MAX(lsug+c, pre))
+				sbufn_str(sb, sug+c)
 				sug = _sug+1;
 				continue;
 			}
 			lookup:
-			if (search(sb->s + last_sug, len - last_sug)) {
+			if (search(sb, lsug, pre)) {
 				sug = suggestsb->s;
 				if (!(_sug = strchr(sug, '\n')))
 					continue;
@@ -521,8 +529,8 @@ static void led_line(sbuf *sb, int ps, int pre, char *post, int ai_max,
 				int r = xrow-xtop+1;
 				if (sug)
 					goto pac_;
-				c = sug_pt >= 0 ? sug_pt : led_lastword(sb->s + pre) + pre;
-				if (suggestsb && search(sb->s + c, sb->s_n - c)) {
+				lsug = sug_pt >= 0 ? sug_pt : led_lastword(sb->s);
+				if (suggestsb && search(sb, lsug, pre)) {
 					sug = suggestsb->s;
 					pac_:
 					syn_setft("/ac");
diff --git a/vi.c b/vi.c
index 96d9f62..f530d32 100644
--- a/vi.c
+++ b/vi.c
@@ -1128,6 +1128,10 @@ static void vc_motion(int cmd)
 	if (r1 == r2 && o1 > o2)
 		swap(&o1, &o2);
 	o1 = ren_noeol(lbuf_get(xb, r1), o1);
+	if (!lnmode && r2 == (r1 + 1) && o2 == 0) {
+		r2 = r1;
+		o2 = lbuf_eol(xb, r1);
+	}
 	if (!lnmode && strchr("fFtTeE%", mv))
 		if (o2 < lbuf_eol(xb, r2))
 			o2 = ren_noeol(lbuf_get(xb, r2), o2) + 1;
