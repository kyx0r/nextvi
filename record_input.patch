diff --git a/ex.c b/ex.c
index 5f4064ff..7c58ef32 100644
--- a/ex.c
+++ b/ex.c
@@ -21,6 +21,7 @@ int xpr;			/* ex_cprint register */
 int xsep = ':';			/* ex command separator */
 int xlim = -1;			/* rendering cutoff for non cursor lines */
 int xseq = 1;			/* undo/redo sequence */
+int xrec;			/* input recoding register */
 
 int xrow, xoff, xtop;		/* current row, column, and top row */
 int xbufcur;			/* number of active buffers */
@@ -1148,6 +1149,7 @@ static void *eo_##opt(char *loc, char *cmd, char *arg) { inner }
 EO(pac) EO(pr) EO(ai) EO(ish) EO(ic) EO(grp) EO(shape) EO(seq)
 EO(sep) EO(tbs) EO(td) EO(order) EO(hll) EO(hlw) EO(hlp) EO(hlr)
 EO(hl) EO(lim) EO(led) EO(vis) EO(mpt)
+EO(rec)
 
 _EO(left,
 	if (*loc)
@@ -1200,6 +1202,7 @@ static struct excmd {
 	{"k", ec_mark},
 	{"q!", ec_quit},
 	{"q", ec_quit},
+	EO(rec),
 	{"reg", ec_regprint},
 	{"rd", ec_undoredo},
 	{"r", ec_read},
diff --git a/term.c b/term.c
index 40e0cb4c..7fa1d2f4 100644
--- a/term.c
+++ b/term.c
@@ -160,6 +160,12 @@ int term_read(void)
 		}
 		ibuf_cnt = 1;
 		ibuf_pos = 0;
+		if (xrec && *ibuf) {
+			char buf[2];
+			buf[0] = *ibuf;
+			buf[1] = '\0';
+			vi_regputraw(xrec, buf, 0, 1);
+		}
 	}
 	if (icmd_pos < sizeof(icmd))
 		icmd[icmd_pos++] = ibuf[ibuf_pos];
diff --git a/vi.h b/vi.h
index 3254b683..d437dade 100644
--- a/vi.h
+++ b/vi.h
@@ -397,6 +397,7 @@ extern int xpr;
 extern int xsep;
 extern int xlim;
 extern int xseq;
+extern int xrec;
 /* global variables */
 extern int xrow, xoff, xtop;
 extern int xbufcur;
