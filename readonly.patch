diff --git a/ex.c b/ex.c
index d065ef4b..c0cece28 100644
--- a/ex.c
+++ b/ex.c
@@ -43,6 +43,7 @@ static int xgdep;		/* global command recursion depth */
 static char xuerr[] = "unreported error";
 static char xserr[] = "syntax error";
 static char xrerr[] = "invalid range";
+char readonly = 0;		/* commandline readonly option */
 
 static int rstrcmp(const char *s1, const char *s2, int l1, int l2)
 {
@@ -104,6 +105,7 @@ static int bufs_open(const char *path, int len)
 	bufs[i].top = 0;
 	bufs[i].td = +1;
 	bufs[i].mtime = -1;
+	bufs[i].readonly = readonly;
 	return i;
 }
 
@@ -431,6 +433,8 @@ static void *ec_edit(char *loc, char *cmd, char *arg)
 		bufs_switch(bufs_open(arg+cd, len));
 		cd = 3; /* XXX: quick hack to indicate new lbuf */
 	}
+	if (access(arg, F_OK) == 0 && access(arg, W_OK) == -1)
+		ex_buf->readonly = 1;
 	readfile(rd =, cd == 3)
 	if (cd == 3 || (!rd && fd >= 0)) {
 		ex_bufpostfix(ex_buf, arg[0]);
@@ -565,6 +569,8 @@ static void *ec_write(char *loc, char *cmd, char *arg)
 	} else {
 		int fd;
 		if (!strchr(cmd, '!')) {
+			if (ex_buf->readonly)
+				return "write failed: readonly option is set";
 			if (!strcmp(xb_path, path) && mtime(path) > ex_buf->mtime)
 				return "write failed: file changed";
 			if (arg[0] && mtime(path) >= 0)
@@ -1141,6 +1147,12 @@ static void *ec_setenc(char *loc, char *cmd, char *arg)
 	return NULL;
 }
 
+static void *ec_readonly(char *loc, char *cmd, char *arg)
+{
+	ex_buf->readonly = !ex_buf->readonly;
+	return NULL;
+}
+
 static int eo_val(char *arg)
 {
 	int val = atoi(arg);
@@ -1212,6 +1224,7 @@ static struct excmd {
 	{"q", ec_quit},
 	{"reg", ec_regprint},
 	{"rd", ec_undoredo},
+	{"ro", ec_readonly},
 	{"r", ec_read},
 	{"wq!", ec_write},
 	{"wq", ec_write},
diff --git a/vi.c b/vi.c
index 70ba6b96..f92e8260 100644
--- a/vi.c
+++ b/vi.c
@@ -1835,9 +1835,11 @@ int main(int argc, char *argv[])
 				xvis |= 8;
 			else if (argv[i][j] == 'v')
 				xvis &= ~4;
+			else if (argv[i][j] == 'R')
+				readonly = 1;
 			else {
 				fprintf(stderr, "Unknown option: -%c\n", argv[i][j]);
-				fprintf(stderr, "Usage: %s [-emsv] [file ...]\n", argv[0]);
+				fprintf(stderr, "Usage: %s [-emRsv] [file ...]\n", argv[0]);
 				return EXIT_FAILURE;
 			}
 		}
diff --git a/vi.h b/vi.h
index e9ed2893..8172bfc4 100644
--- a/vi.h
+++ b/vi.h
@@ -374,6 +374,7 @@ struct buf {
 	int plen, row, off, top;
 	long mtime;			/* modification time */
 	signed char td;			/* text direction */
+	char readonly;			/* read only */
 };
 /* ex options */
 extern int xleft;
@@ -510,3 +511,4 @@ void vi_regput(int c, const char *s, int ln);
 extern rset *fsincl;
 extern char *fs_exdir;
 void dir_calc(char *path);
+extern char readonly;
