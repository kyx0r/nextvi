diff --git a/ex.c b/ex.c
index 73646a4b..c77c0064 100644
--- a/ex.c
+++ b/ex.c
@@ -1288,3 +1288,16 @@ void ex_init(char **files, int n)
 	if ((s = getenv("EXINIT")))
 		ex_command(s)
 }
+
+void ex_done(void)
+{
+	for (int i = 0; i < LEN(tempbufs); i++)
+		if (tempbufs[i].lb) {
+			free(tempbufs[i].path);
+			lbuf_free(tempbufs[i].lb);
+		}
+	for (int i = 0; i < xbufcur; i++)
+		bufs_free(i);
+	rset_free(xkwdrs);
+	free(bufs);
+}
diff --git a/regex.c b/regex.c
index b4c3ab3a..54e94aa1 100644
--- a/regex.c
+++ b/regex.c
@@ -624,6 +624,7 @@ static int re_pikevm(rcode *prog, const char *s, const char **subp, int nsubp, i
 	int si = 0, clistidx = 0, nlistidx, mcont = MATCH;
 	int eol_ch = flg & REG_NEWLINE ? '\n' : 0;
 	unsigned int sdense[prog->sparsesz], sparsesz = 0;
+	memset(sdense, 0, sizeof(int) * prog->sparsesz);
 	char nsubs[prog->sub];
 	flg = prog->flg | flg;
 	if (eol_ch)
diff --git a/ren.c b/ren.c
index 2a80efa7..cb6ce553 100644
--- a/ren.c
+++ b/ren.c
@@ -94,6 +94,20 @@ static int ren_cwid(char *s, int pos)
 ren_state rstates[3]; /* 0 = current line, 1 = all other lines, 2 = aux rendering */
 ren_state *rstate = rstates;
 
+void ren_done(void)
+{
+	rset_free(dir_rslr);
+	rset_free(dir_rsrl);
+	rset_free(dir_rsctx);
+	for (int i = 0; i < LEN(rstates); i++) {
+		if (rstate[i].col) {
+			free(rstate[i].col - 2);
+			free(rstate[i].pos);
+			free(rstate[i].chrs);
+		}
+	}
+}
+
 /* specify the screen position of the characters in s */
 ren_state *ren_position(char *s)
 {
@@ -395,3 +409,10 @@ void syn_init(void)
 		pats[i] = fts[i].pat;
 	syn_ftrs = rset_make(i, pats, 0);
 }
+
+void syn_done(void)
+{
+	for (; ftmidx >= 0; ftmidx--)
+		rset_free(ftmap[ftmidx].rs);
+	rset_free(syn_ftrs);
+}
diff --git a/vi.c b/vi.c
index f95a2fae..3dea2e7e 100644
--- a/vi.c
+++ b/vi.c
@@ -502,6 +502,12 @@ void vi_regput(int c, const char *s, int ln)
 	vi_regputraw(c, s, ln, isupper(c));
 }
 
+static void vi_regdone(void)
+{
+	for (int i = 0; i < LEN(xregs); i++)
+		free(xregs[i]);
+}
+
 rset *fsincl;
 char *fs_exdir;
 static int fspos;
@@ -1906,12 +1912,19 @@ int main(int argc, char *argv[])
 		ex();
 	else
 		vi(1);
+	ex_done();
 	term_done();
+	free(ibuf);
+	rset_free(fsincl);
 	if (abs(xquit) == 2)
 		term_clean();
 	else if (!(xvis & 4)) {
 		term_pos(xrows - !vi_status, 0);
 		term_kill();
 	}
+	vi_regdone();
+	syn_done();
+	ren_done();
+	led_done();
 	return EXIT_SUCCESS;
 }
diff --git a/vi.h b/vi.h
index c57d91a6..578fc9c1 100644
--- a/vi.h
+++ b/vi.h
@@ -225,6 +225,7 @@ char *ren_translate(char *s, char *ln);
 /* text direction */
 int dir_context(char *s);
 void dir_init(void);
+void dir_done(void);
 /* syntax highlighting */
 #define SYN_BD		0x010000
 #define SYN_IT		0x020000
@@ -248,6 +249,7 @@ void syn_reloadft(void);
 int syn_findhl(int id);
 void syn_addhl(char *reg, int id, int reload);
 void syn_init(void);
+void syn_done(void);
 
 /* uc.c utf-8 helper functions */
 extern unsigned char utf8_length[256];
@@ -403,6 +405,7 @@ void ex_cprint(char *line, int r, int c, int ln);
 #define ex_print(line) RS(2, ex_cprint(line, -1, 0, 1))
 void ex_init(char **files, int n);
 void ex_bufpostfix(struct buf *p, int clear);
+void ex_done(void);
 int ex_krs(rset **krs, int *dir);
 void ex_krsset(char *kwd, int dir);
 int ex_edit(const char *path, int len);
