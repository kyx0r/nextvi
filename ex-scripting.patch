diff --git a/ex.c b/ex.c
index 756f45d..01c3ced 100644
--- a/ex.c
+++ b/ex.c
@@ -33,6 +33,7 @@ int xkwddir;			/* the last search direction */
 int xmpt;			/* whether to prompt after printing > 1 lines in vi */
 int xpr;			/* ex_cprint register */
 char *xregs[256];		/* string registers */
+char **xenvp;
 static int xbufsmax;		/* number of buffers */
 static int xbufsalloc = 10;	/* initial number of buffers */
 static char xrep[EXLEN];	/* the last replacement */
@@ -1090,6 +1091,41 @@ static int ec_setenc(char *loc, char *cmd, char *arg)
 	return 0;
 }
 
+static int ec_script(char *loc, char *cmd, char *arg)
+{
+	char *rep;
+	char buf[100];
+	int row = xrow, off = xoff;
+	char *ln = lbuf_get(xb, row);
+	if (!*arg)
+		return 0;
+	setenv("NEXTVI_FT", ex_ft, 1);
+	itoa(row, buf);
+	setenv("NEXTVI_ROW", buf, 1);
+	itoa(ln ? uc_chr(ln, off) - ln : 0, buf);
+	setenv("NEXTVI_OFF", buf, 1);
+	itoa(off, buf);
+	setenv("NEXTVI_COFF", buf, 1);
+	setenv("NEXTVI_LINE", ln ? ln : "", 1);
+	if (!lbuf_wordend(xb, 0, 1, &row, &off)) {
+		rep = uc_sub(lbuf_get(xb, row), xoff, off+1);
+		setenv("NEXTVI_WORD", rep, 1);
+		free(rep);
+	} else
+		setenv("NEXTVI_WORD", "", 1);
+	if (!(xvis & 4) && cmd[1] == 'c') {
+		term_chr('\n');
+		xmpt = xmpt >= 0 ? 2 : xmpt;
+	}
+	xenvp = environ;
+	rep = cmd_pipe(arg, NULL, cmd[1] == 'x');
+	xenvp = NULL;
+	if (rep && cmd[1] == 'x')
+		ex_exec(rep);
+	free(rep);
+	return 0;
+}
+
 static struct excmd {
 	char *name;
 	int (*ec)(char *loc, char *cmd, char *arg);
@@ -1142,6 +1178,8 @@ static struct excmd {
 	{"ac", ec_setacreg},
 	{"uc", ec_setenc},
 	{"ph", ec_setenc},
+	{"sc", ec_script},
+	{"sx", ec_script},
 	{"", ec_print},
 };
 
diff --git a/term.c b/term.c
index 71ab1f5..b8a3eb2 100644
--- a/term.c
+++ b/term.c
@@ -218,7 +218,10 @@ static int cmd_make(char **argv, int *ifd, int *ofd)
 			close(pipefds1[0]);
 			close(pipefds1[1]);
 		}
-		execvp(argv[0], argv);
+		if (xenvp)
+			execve(argv[0], argv, xenvp);
+		else
+			execvp(argv[0], argv);
 		exit(1);
 	}
 	if (ifd)
diff --git a/vi.h b/vi.h
index ff5c929..9b7523b 100644
--- a/vi.h
+++ b/vi.h
@@ -9,6 +9,14 @@ If something is listed here, it must be used across multiple
 files and thus is never static.
 */
 
+#ifdef __APPLE__
+#include <crt_externs.h>
+#define environ (*_NSGetEnviron())
+#else
+extern char **environ;
+#endif
+extern char **xenvp;
+
 /* helper macros */
 #define LEN(a)		(int)(sizeof(a) / sizeof((a)[0]))
 #define MIN(a, b)	((a) < (b) ? (a) : (b))
