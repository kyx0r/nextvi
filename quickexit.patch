diff --git a/ex.c b/ex.c
index 5bf89e3b..41d6691a 100644
--- a/ex.c
+++ b/ex.c
@@ -16,6 +16,7 @@ int xorder = 1;			/* change the order of characters */
 int xkmap;			/* the current keymap */
 int xkmap_alt = 1;		/* the alternate keymap */
 int xtbs = 8;			/* number of spaces for tab */
+int xqe = 1000;			/* exit insert via kj (delay in ms) */
 int xish;			/* interactive shell */
 int xgrp;			/* regex search group */
 int xpac;			/* print autocomplete options */
@@ -1098,6 +1099,7 @@ static int eo_##opt(char *loc, char *cmd, char *arg) { inner }
 EO(pac) EO(pr) EO(ai) EO(ish) EO(ic) EO(grp) EO(shape) EO(seq)
 EO(sep) EO(tbs) EO(td) EO(order) EO(hll) EO(hlw) EO(hlp) EO(hlr)
 EO(hl) EO(lim) EO(led) EO(vis) EO(mpt)
+EO(qe)
 
 _EO(left,
 	if (*loc)
@@ -1147,6 +1149,7 @@ static struct excmd {
 	{"g!", ec_glob},
 	{"g", ec_glob},
 	{"k", ec_mark},
+	EO(qe),
 	{"q!", ec_quit},
 	{"q", ec_quit},
 	{"reg", ec_regprint},
diff --git a/led.c b/led.c
index 989601f8..380811ed 100644
--- a/led.c
+++ b/led.c
@@ -408,6 +408,14 @@ void led_modeswap(void)
 	restore(xvis)
 }
 
+static int gettime_ms(void)
+{
+	struct timespec t;
+	if (clock_gettime(CLOCK_MONOTONIC, &t) < 0)
+		return 0;
+	return t.tv_sec * 1000 + t.tv_nsec / 1000000;
+}
+
 /* read a line from the terminal */
 static void led_line(sbuf *sb, int ps, int pre, char *post, int postn,
 	int ai_max, int *key, int *kmap, int orow, int lsh)
@@ -415,6 +423,7 @@ static void led_line(sbuf *sb, int ps, int pre, char *post, int postn,
 	int len, t_row = -2, p_reg = 0;
 	int c, i, lsug = 0, sug_pt = -1;
 	char *cs, *sug = NULL, *_sug = NULL;
+	int quickexit = 0;
 	while (1) {
 		led_printparts(sb, pre, ps, post, postn, ai_max);
 		len = sb->s_n;
@@ -610,7 +619,21 @@ static void led_line(sbuf *sb, int ps, int pre, char *post, int postn,
 		case TK_CTL('o'):;
 			led_modeswap();
 			continue;
+		case 'j':
+			if (xqe && (gettime_ms() - quickexit) < xqe) {
+				if (sb->s_n) {
+					if (sb->s[led_lastchar(sb->s)] != 'k')
+						goto _default;
+					sbuf_cut(sb, led_lastchar(sb->s))
+				}
+				c = TK_ESC;
+				goto leave;
+			}
+			goto _default;
+		case 'k':
+			quickexit = gettime_ms();
 		default:
+_default:
 			if (c == '\n' || TK_INT(c))
 				goto leave;
 			if ((cs = led_read(kmap, c)))
diff --git a/vi.c b/vi.c
index 98367572..934fb5ef 100644
--- a/vi.c
+++ b/vi.c
@@ -7,6 +7,7 @@
 #include <dirent.h>
 #include <signal.h>
 #include <unistd.h>
+#include <time.h>
 #include <poll.h>
 #include <termios.h>
 #include <limits.h>
@@ -1575,6 +1576,8 @@ void vi(int init)
 				vc_insert(c);
 				ins:
 				vi_mod |= !xpac && xrow == orow ? 8 : 1;
+				if (xqe)
+					vi_mod |= 2;
 				if (vi_insmov == 127 || vi_insmov == TK_CTL('h')) {
 					if (xrow && !(xoff > 0 && lbuf_eol(xb, xrow, 1))) {
 						xrow--;
diff --git a/vi.h b/vi.h
index ae224584..6a3a17c9 100644
--- a/vi.h
+++ b/vi.h
@@ -490,6 +490,7 @@ extern int xhlr;
 extern int xkmap;
 extern int xkmap_alt;
 extern int xtbs;
+extern int xqe;
 extern int xish;
 extern int xgrp;
 extern int xpac;
